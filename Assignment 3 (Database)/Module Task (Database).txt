Task
1. Create Table Name : Student and Exam

>>INSERT INTO student(name,branch) VALUES("sohan","Ec"),("jay","IT")

>> CREATE TABLE student(rollno int PRIMARY KEY AUTO_INCREMENT, name varchar(50), branch varchar(50))

>>CREATE TABLE exam(rollno int, s_code varchar(50), marks int, p_code varchar(50), FOREIGN KEY (rollno) REFERENCES student(rollno))

>>INSERT INTO exam(rollno,s_code,marks,p_code) values(1,"cs11",60,"ps11"),(1,"ps12",58,"cs12"),(2,"cs11",52,"ps11"),(2,"ps12",47,"cs12")

2. Create table given below

>>CREATE TABLE task2(first_name varchar(50),last_name varchar(50),address varchar(50),city varchar(50),age int )

>>INSERT INTO task2(first_name,last_name,address,city,age) VALUES("mickey","mouse","302 carrot street","rascal",28)

3. Create table given below: Employee and Incentive
Table Name: Employee

>>CREATE TABLE employee(employee_id int PRIMARY KEY AUTO_INCREMENT, first_name varchar(50), last_name varchar(50), salary int, joining_date timestamp, department varchar(50))

>>INSERT INTO employee(first_name,last_name,salary,joining_date,department) VALUES("john","abraham",100000,now(),"banking"),("michael","clarke",800000,now(),"insurance"),("roy","thomas",700000,now(),"banking"),("tom","jose",600000,now(),"insurance"),("jerry","pinto",650000,now(),"service")

Table Name: Incentive

>>CREATE TABLE incentive(employee_ref_id int, incentive_date datetime,incentive_amount int, FOREIGN KEY (employee_ref_id) REFERENCES employee(employee_id))

>>INSERT INTO incentive(employee_ref_id,incentive_date,incentive_amount) VALUES(1,now(),5000),(2,now(),3000),(3,now(),4000)

a) Get First_Name from employee table using Tom name “Employee Name”.

SELECT * FROM employee WHERE first_name = 'tom'

b) Get FIRST_NAME, Joining Date, and Salary from employee table.

SELECT first_name,joining_date,salary FROM employee

c) Get all employee details from the employee table order by First_Name 
Ascending and Salary descending?

SELECT * FROM employee ORDER BY first_name ASC

SELECT * FROM `employee` ORDER BY salary DESC


d) Get employee details from employee table whose first name contains ‘J’

SELECT * FROM `employee` WHERE first_name LIKE 'j%'

e) Get department wise maximum salary from employee table order by salary 
ascending?

SELECT department FROM employee ORDER BY salary ASC

f) Select first_name, incentive amount from employee and incentives table for 
those employees who have incentives and incentive amount greater than 3000

SELECT employee.first_name,incentive.incentive_amount FROM employee JOIN incentive ON employee.employee_id = incentive.employee_ref_id WHERE incentive.incentive_amount > 3000

g) Create After Insert trigger on Employee table which insert records in view 
table

CREATE TABLE view_table(id int,name varchar(50),date_time timestamp,record varchar(50))

DROP TRIGGER IF EXISTS `insert_view_table`;CREATE DEFINER=`root`@`localhost` TRIGGER `insert_view_table` AFTER INSERT ON `employee` FOR EACH ROW BEGIN INSERT INTO view_table(id,name,record) VALUES(new.employee_id,new.first_name,"record inserted"); END



4. Create table given below: Salesperson and Customer

CREATE TABLE salesperson(sno int PRIMARY KEY AUTO_INCREMENT, sname varchar(50), city varchar(50), comm float )

CREATE TABLE customer(cnm int PRIMARY KEY AUTO_INCREMENT, cname varchar(50), city varchar(50), rating int, sno int, FOREIGN KEY (sno) REFERENCES salesperson(sno))

Retrieve the below data from above table 
a) All orders for more than $1000.

b) Names and cities of all salespeople in London with commission above 0.12

SELECT sname,city FROM salesperson WHERE city = 'london' AND comm > 0.12

c) All salespeople either in Barcelona or in London

SELECT * FROM salesperson WHERE city = 'london' OR city = 'barcelona'

d) All salespeople with commission between 0.10 and 0.12. (Boundary values 
should be excluded).

SELECT * FROM salesperson WHERE comm BETWEEN 0.10 AND 0.12

e) All customers excluding those with rating <= 100 unless they are located in 
Rome

SELECT * FROM `customer` WHERE rating > 100 OR (rating <= 100 AND city = 'roe')




